# -*- coding: utf-8 -*-
"""TwitterDataCleaning.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/106ZiXvP-MFnTp6tnAm1BmnwVmCirNJZT

# Preliminary Items

## Imports
"""

import os
import pandas as pd

import requests
import json

"""Enable colab pandas interactive displays"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import data_table
# %load_ext google.colab.data_table

"""## Mount Google Drive """

# Commented out IPython magic to ensure Python compatibility.
currentWorkingDir = !pwd
defaultWorkingDir = "/content"

if ( currentWorkingDir[0] == defaultWorkingDir ):
  from google.colab import drive

  drive.mount('/content/drive')
      
#   %cd "/content/drive/My Drive/Colab Notebooks/stock_portfolio/"
else:
  print("Currenting running app from: ")
  !pwd

"""## Data Preparation

### Read in file
"""

symbol = "ccc"

df_tweets = pd.read_csv("tweets_"+symbol+"_raw.csv")#usecols=list(range(21))[1:]) # usecols - don't pickup first column

df_tweets

"""View number of rows and columns"""

df_tweets.shape

"""View column data types"""

df_tweets.dtypes

"""### Select Data

Determine keywords that will determine relevant tweets
"""

df_tweets[df_tweets['user_name']!='CaribCementJa'].loc[:,['id_str', 'text', 'user_name']]

"""### Clean Data

Check columns for N/A values
"""

df_tweets.isna().sum()

"""Check columns for "0" as value"""

(df_tweets == 0).sum()

"""#### Column: Text"""

import string

import re

"""Remove unnecessary objects like hashtags, mentions, links and punctuation.

##### Remove http links
"""

def remove_http (string):
    return re.sub(r'http\S+', '', string)

df_tweets['text_clean'] = df_tweets['text'].apply(lambda x: remove_http(x))

df_tweets[df_tweets['user_name']!='CaribCementJa'].loc[:,['id_str', 'text', 'text_clean']]

"""##### Remove at mentions and hashtags"""

def remove_mension_hashtags (string):
    return re.sub(r'(@|#)\w*', '', string)

df_tweets['text_clean'] = df_tweets['text_clean'].apply(lambda x: remove_mension_hashtags(x))

df_tweets[df_tweets['user_name']!='CaribCementJa'].loc[:,['id_str', 'text', 'text_clean']]

"""##### Remove punctuations"""

string.punctuation

def remove_punct(text):
    text  = "".join([char for char in text if char not in string.punctuation])
    text = re.sub('[0-9]+', '', text)
    return text

df_tweets['text_clean'] = df_tweets['text_clean'].apply(lambda x: remove_punct(x))

df_tweets[df_tweets['user_name']!='CaribCementJa'].loc[:,['id_str', 'text', 'text_clean']]

"""##### Replace emoji or emotions with text"""

!pip install emoji

import emoji

print(emoji.emojize('Python is :thumbs_up:'))

print(emoji.demojize('Python is üëç'))

print(emoji.emojize("Python is fun :red_heart:"))

print(emoji.emojize("Python is fun :red_heart:",variant="emoji_type"))